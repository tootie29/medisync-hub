
# Database Configuration
DB_HOST=localhost
DB_USER=root
DB_PASSWORD=
DB_NAME=medi_hub
PORT=3001

# Set to 'production' for production environment
NODE_ENV=development
# Alternative production flag (some systems use this instead)
# PRODUCTION=true

# Enable database debugging (set to 'true' to see detailed MySQL logs)
# DB_DEBUG=true

# --------------------------------------------------
# cPanel Production Configuration Example
# --------------------------------------------------
# For cPanel hosting, typically use:
# DB_HOST=localhost (or the specific host provided by your hosting company)
# DB_USER=your_cpanel_username_databaseusername 
# DB_PASSWORD=your_database_password
# DB_NAME=your_cpanel_username_databasename
# NODE_ENV=production
# 
# Note: cPanel often prefixes database names and usernames with your cPanel username
# Example:
#   If cPanel username is "medisync" and you created a database named "medi_hub"
#   with a user "admin", your configuration might be:
#   DB_USER=medisync_admin
#   DB_NAME=medisync_medi_hub

# --------------------------------------------------
# IMPORTANT CPANEL SETUP INSTRUCTIONS
# --------------------------------------------------
# 1. Create a .env file in the server directory (same location as server.js)
# 2. Copy the settings from this example file to your .env file
# 3. Update the database credentials to match your cPanel database
# 4. Set NODE_ENV=production
# 5. In cPanel, make sure:
#    - Node.js version is 14 or higher
#    - Application root is the directory containing server.js
#    - Application URL is correctly set to /server (not /server/)
#    - Application startup file is server.js
# 6. After setting up the .env file, click "Run NPM Install" in cPanel
# 7. Then click "Run JS Script" to start the server
# 8. Test your connection with: https://yourdomain.com/server/api/health

# --------------------------------------------------
# TROUBLESHOOTING
# --------------------------------------------------
# If you see 503 Service Unavailable:
# - Check if Node.js application is running in cPanel
# - Verify your Application URL is set to /server (not /server/)
# - Ensure JS script is running (may need restart if server crashed)
# - Check cPanel error logs for any Node.js errors
# - Ensure MySQL database exists and credentials are correct
# - Contact your hosting provider if firewall might be blocking connections

