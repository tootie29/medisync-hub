
# Database Configuration
DB_HOST=localhost
DB_USER=entrsolu_climasysuser
DB_PASSWORD=+DrJ)ObKCc)2
DB_NAME=entrsolu_climasys
PORT=3001

# Set to 'production' for production environment
NODE_ENV=production
# Alternative production flag (some systems use this instead)
# PRODUCTION=true

# Application URL path - set to '/server' if running in a subdirectory
APPLICATION_URL=/server

# Enable database debugging (set to 'true' to see detailed MySQL logs)
# DB_DEBUG=true

# --------------------------------------------------
# cPanel Configuration Instructions
# --------------------------------------------------
# When setting up your Node.js application in cPanel:
#
# 1. Application URL should be set to:
#    For subdirectory access: /server (no trailing slash)
#
# 2. Example configuration with server in subdirectory:
#    - If your API is at: https://climasys.entrsolutions.com/server/api/health
#      Set Application URL to: /server (no trailing slash)
#      Set APPLICATION_URL in .env to: /server
#
# 3. Static files should be uploaded to the document root
#    The React frontend should be uploaded to public_html/
#    The Node.js server should be uploaded to public_html/server/
#
# 4. After setting the Application URL, update the .env file
#    with the correct APPLICATION_URL value
#
# 5. PORT setting in cPanel:
#    - In cPanel's Node.js app settings, check what port is assigned
#    - Update the PORT value in .env to match cPanel's assigned port
#    - If you see "EADDRINUSE" errors, it means the port is already in use
#      and you should check with your hosting provider for the correct port to use

# --------------------------------------------------
# Deployment & npm Installation Instructions
# --------------------------------------------------
# 1. Server Package.json:
#    - The package.json file is located in the server directory
#    - When deploying, ensure this package.json is uploaded to public_html/server/
#    - In cPanel, navigate to Node.js applications
#    - Point your application to the server directory containing package.json
#    - Use "Run NPM Install" in cPanel to install dependencies
#
# 2. Frontend Deployment:
#    - Build the React frontend locally using npm run build
#    - Upload the build output (dist or build folder) to public_html/
#    - No npm install is needed for the frontend on the server
#
# 3. Full Deployment Structure:
#    public_html/              <- Frontend static files
#    public_html/server/       <- Server files
#    public_html/server/.env   <- Server configuration (from this template)
#    public_html/server/package.json  <- npm dependencies file

# --------------------------------------------------
# TROUBLESHOOTING
# --------------------------------------------------
# If you see 404 errors:
# - Check the path in browser console network tab
# - Ensure frontend is looking for API at /server/api/... paths
# - Verify frontend build uses correct API URLs
# - Check cPanel error logs for any Node.js errors
# - Ensure MySQL database exists and credentials are correct
# - Contact your hosting provider if firewall might be blocking connections
#
# If you see EADDRINUSE errors:
# - This means port 3001 (or whatever port you've set) is already in use
# - In cPanel, find out what port is assigned to your application
# - Update the PORT value in .env to match cPanel's assigned port
# - You might need to stop any other Node.js applications using the same port
